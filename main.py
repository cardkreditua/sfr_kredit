import logging
import os
import json
import asyncio
from aiogram import Bot, Dispatcher, types, F, Router
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.fsm.storage.memory import MemoryStorage
from openai import OpenAI
import gspread
from google.oauth2.service_account import Credentials

# --- ENV –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
GOOGLE_CREDENTIALS_JSON = os.getenv("GOOGLE_CREDENTIALS_JSON")

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(level=logging.INFO)

# --- OpenAI –∫–ª–∏–µ–Ω—Ç ---
client = OpenAI(api_key=OPENAI_API_KEY)

# --- Google Sheets ---
scopes = ["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
credentials = Credentials.from_service_account_info(json.loads(GOOGLE_CREDENTIALS_JSON), scopes=scopes)
gs_client = gspread.authorize(credentials)
sheet = gs_client.open("–ó–∞—è–≤–∫–∏ –ö—Ä–µ–¥–∏—Ç").sheet1

# --- –ë–æ—Ç –∏ —Ä–æ—É—Ç–µ—Ä—ã ---
bot = Bot(token=TELEGRAM_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())
router = Router()
dp.include_router(router)

# --- –•–µ–Ω–¥–ª–µ—Ä—ã ---
@router.message(F.text == "/start")
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ –∫—Ä–µ–¥–∏—Ç. –©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å: –≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π, –Ω–∞ —Ç–æ–≤–∞—Ä —á–∏ –∫–∞—Ä—Ç–∫–∞?")

@router.message()
async def gpt_handler(message: Message):
    user_text = message.text
    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {
                    "role": "system",
                   "content": (
                        "–¢–∏ ‚Äî –≤–≤—ñ—á–ª–∏–≤–∏–π —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä. "
                        "–¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∫–ª—ñ—î–Ω—Ç—É –∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ –∫—Ä–µ–¥–∏—Ç –∞–±–æ —Ä–æ–∑—Å—Ç—Ä–æ—á–∫—É. "
                        "–°–ø—ñ–ª–∫—É–π—Å—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –∫–æ—Ä–æ—Ç–∫–æ, –¥–æ–±—Ä–æ–∑–∏—á–ª–∏–≤–æ. "
                        "–ù–µ –ø–æ–≤—Ç–æ—Ä—é–π –æ–¥–Ω—ñ –π —Ç—ñ —Å–∞–º—ñ –ø–∏—Ç–∞–Ω–Ω—è. "
                        "–ó–∞–¥–∞–≤–∞–π –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–æ —á–µ—Ä–∑—ñ: –¥–∞–ª—ñ ‚Äî —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. "
                        "–ó–∞–≤–∂–¥–∏ –≤–µ–¥–∏ –¥—ñ–∞–ª–æ–≥ –¥–æ —Ñ—ñ–Ω–∞–ª—É ‚Äî –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏.\n\n"
                        "–ê–ª–≥–æ—Ä–∏—Ç–º:\n"
                        "1. –ó–∞–ø–∏—Ç–∞–π, —è–∫–∞ —Å—É–º–∞ –∫—Ä–µ–¥–∏—Ç—É —Ü—ñ–∫–∞–≤–∏—Ç—å –∫–ª—ñ—î–Ω—Ç–∞.\n"
                        "2. –Ø–∫—â–æ –∫–ª—ñ—î–Ω—Ç —Ö–æ—á–µ —Ä–æ–∑—Å—Ç—Ä–æ—á–∫—É ‚Äî –∑–∞–ø–∏—Ç–∞–π –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä.\n"
                        "3. –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –ø–æ–ø—Ä–æ—Å–∏ –∑–∞–ª–∏—à–∏—Ç–∏ —ñ–º‚Äô—è —Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏.\n"
                        "4. –Ø–∫—â–æ –∫–ª—ñ—î–Ω—Ç –Ω–∞–¥–∞—î –Ω–æ–º–µ—Ä ‚Äî –ø–æ–¥—è–∫—É–π —ñ —Å–∫–∞–∂–∏, —â–æ –∑–∞—è–≤–∫–∞ –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.\n"
                        "5. –Ø–∫—â–æ –Ω–æ–º–µ—Ä –≤–∂–µ –±—É–≤ ‚Äî –Ω–µ –ø–æ–≤—Ç–æ—Ä—é–π –∑–∞–ø–∏—Ç.\n\n"
                        "–ú–µ—Ç–∞:\n"
                        "- –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—É–º—É üí∞\n"
                        "- –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä üîó (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)\n"
                        "- –Ü–º‚Äô—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω üìû"
                       "–ü—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É ‚Äî –ø–æ–¥—è–∫—É–π –∫–ª—ñ—î–Ω—Ç—É —ñ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏ —Å–∞–π—Ç https://financebroker.com.ua –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ñ—à–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó."
                    )

                },
                {
                    "role": "user",
                    "content": user_text
                }
            ]
        )
        reply = response.choices[0].message.content
        await message.answer(reply)

        if any(char.isdigit() for char in user_text) and len(user_text) >= 10:
            sheet.append_row([message.from_user.full_name, user_text])

    except Exception as e:
        logging.exception("GPT error:")
        await message.answer("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ GPT.")

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
